<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<context:component-scan base-package="controller" />
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760">
		</beans:property>
	</beans:bean>
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="c:\\zzz\\upload">
		</beans:constructor-arg>
	</beans:bean>
	<context:component-scan base-package="util"></context:component-scan>
	<beans:bean id="sampleInterceptor" class="interceptor.SampleInterceptor"></beans:bean>
	<beans:bean id="authInterceptor" class="interceptor.AuthInterceptor"></beans:bean>
	<beans:bean id="loginInterceptor" class="interceptor.LoginInterceptor"></beans:bean>

	<interceptors>
		<interceptor>
			<mapping path="/member/login" />
			<beans:ref bean="loginInterceptor" />
		</interceptor>
		<!--
		AuthInterceptor는 특정 경로에 접근하는 경우 현재 사용자가 로그인한 상태의
		사용자인지를 체크하는 역할을 처리하기 위해서 작성한다
		-->
		<interceptor>
			<mapping path="/board/list" />
			<beans:ref bean="authInterceptor" />
		</interceptor>
	</interceptors>
	<!--
	<beans:bean id="sampleInterceptor" class="interceptor.SampleInterceptor"></beans:bean>
	
	<interceptors>
	<interceptor>
	<mapping path="/user/loginPost" />
	<beans:ref bean="loginInterceptor" />
	</interceptor>
	<interceptor>
	<mapping path="/board/list" />
	<beans:ref bean="authInterceptor" />
	</interceptor>
	AuthInterceptor는 특정 경로에 접근하는 경우 현재 사용자가 로그인한 상태의
	사용자인지를 체크하는 역할을 처리하기 위해서 작성한다
	
	<interceptor>
	<mapping path="/doA" />
	<mapping path="/doB" />
	<beans:ref bean="sampleInterceptor" />
	</interceptor>
	</interceptors>
	-->
</beans:beans>
